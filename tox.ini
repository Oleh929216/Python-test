[tox]
isolated_build = true
requires =
    tox>4
    tox-gh-actions
envlist =
    {py37,py38,py39,py310}-unit
    {py37,py38,py39,py310}-integration
    {py37,py38,py39,py310}-smoke
suicide_timeout = 0.5

[gh-actions]
python =
    3.7: py37-unit, py37-integration, py37-smoke
    3.8: py38-unit, py38-integration, py38-smoke
    3.9: py39-unit, py39-integration, py39-smoke
    3.10: py310-unit, py310-integration, py310-smoke

[testenv]
description =
    Run tests under {basepython}
skip_install = true
allowlist_externals = poetry, pytest
setenv =
    PYTHONDONTWRITEBYTECODE=1
commands_pre =
    poetry install --with dev,test
commands =
    unit: python3 -m pytest tests/integration/ --maxfail=10 {posargs}
    integration: pytest tests/integration/ --exitfirst {posargs}
    smoke: pytest tests/integration/ --exitfirst {posargs}
basepython =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310
    pypy3: pypy3
    mypy: py310
    lint: py39
    clean: py310
usedevelop = True

[testenv:mypy]
commands_pre =
    poetry install --only dev
    python -m mypy --install-types --non-interactive
commands =
    python -m mypy --config-file pyproject.toml

[testenv:lint]
commands_pre =
    poetry install --only dev
commands =
    pre-commit {posargs:run --all-files --show-diff-on-failure}

[testenv:clean]
allowlist_externals = poetry, pytest, bash
commands_pre =
    poetry install --only dev
commands =
    python -m cleanpy .
    bash -c "docker ps -aq --filter label=creator=pytest-docker-tools | xargs docker rm -f"
